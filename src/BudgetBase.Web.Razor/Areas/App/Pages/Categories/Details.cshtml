@page
@model BudgetBase.Web.Razor.Areas.App.Pages.Categories.CategoryDetailsModel
@{
    ViewData["Title"] = "Details";
}

<div class="d-md-flex justify-content-between align-items-center">
    <h5 class="mb-0  d-none d-lg-block">@ViewData["Title"]</h5>

    @await Component.InvokeAsync("Breadcrumb", new { breadcrumbModels = Model.Breadcrumbs })
</div>
<div class="row">
    <div class="col-md-12 mt-4">
        <div class="card rounded shadow">
            <div class="p-4 border-bottom-zinc-200">
                <h5 class="title mb-0">Categories</h5>
            </div>
            <div class="card-body">
                <div class="col-md-6 mb-3">
                    <div class="form-floating">
                        <input asp-for="Category.Title" class="form-control" disabled />
                        <label asp-for="Category.Title"></label>
                    </div>
                </div>
                <div class="col-md-6 mb-3">
                    <div class="form-floating">
                        <input asp-for="Category.Description" class="form-control" disabled />
                        <label asp-for="Category.Description"></label>
                    </div>
                </div>
                <div class="col-md-6 mb-3">
                    <div class="form-floating">
                        <select asp-for="Category.TransactionTypeId" class="form-control" asp-items="@(ViewData["TransactionTypeId"] as SelectList)" disabled>
                            <option value=""></option>
                        </select>
                        <label asp-for="Category.TransactionTypeId" class="control-label"></label>
                    </div>
                </div>
                <div class="col-md-6 mb-3">
                    <div class="form-floating">
                        <select asp-for="Category.ParentTransactionCategoryId" class="form-control" asp-items="@(ViewData["CategoryId"] as SelectList)" disabled>
                            <option value=""></option>
                        </select>
                        <label asp-for="Category.ParentTransactionCategoryId" class="control-label"></label>
                    </div>
                </div>
                <div class="col-md-6 mb-3">
                    <div class="form-floating">
                        <input asp-for="Category.Color" class="form-control" type="color" disabled />
                        <label asp-for="Category.Color"></label>
                    </div>
                </div>
                <div class="col-md-6 mb-3">
                    <div class="form-floating">
                        <input asp-for="Category.Icon" class="form-control" disabled />
                        <label asp-for="Category.Icon"></label>
                        <div id="output-icon"></div>
                    </div>
                </div>
                <div class="form-group mt-4">
                    <a class="btn btn-dark" asp-page="./Edit" asp-route-id="@Model.Category?.Id">Edit</a>
                    <a class="btn btn-outline-dark" asp-page="./Index">Back to List</a>
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script src="~/dist/libs/@@migliori/universal-icon-picker/assets/js/universal-icon-picker.min.js"></script>
    <script type="text/javascript">
        const options = {
            iconLibraries: [
                'happy-icons.min.json',
                'font-awesome.min.json'
            ],
            iconLibrariesCss: [
                'happy-icons.min.css',
                'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css'
            ],
            onSelect: function (jsonIconData) {
                var txt = document.createElement("textarea");
                txt.innerHTML = jsonIconData.iconMarkup;
                document.getElementById('output-icon').innerHTML = txt.value;
                document.getElementById('Category_Icon').value = txt.value;
            }
        }

        var uip = new UniversalIconPicker('#Category_Icon', options);

        document.addEventListener('DOMContentLoaded', function () {
            var icon = document.getElementById('Category_Icon');
            document.getElementById('output-icon').innerHTML = icon.value;
        });
    </script>
}